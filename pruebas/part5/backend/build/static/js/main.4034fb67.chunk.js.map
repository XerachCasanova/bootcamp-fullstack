{"version":3,"sources":["components/Footer.js","components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Footer","style","color","fontStyle","fontSize","Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","Notification","message","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","notesToShow","filter","map","i","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"4KAkBeA,EAlBA,WAQX,OACI,sBAAKC,MAPW,CAChBC,MAAO,QACPC,UAAW,QACXC,SAAU,IAIV,UACI,uBACA,sGCEGC,EAXF,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,iBACbC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCNpCK,EAAU,aAiCD,EA/BA,WAGX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SA4B9B,EAxBA,SAAAC,GAIX,OAFgBL,IAAMM,KAAKP,EAASM,GAErBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAoB9B,EAhBA,SAACG,EAAIF,GAIhB,OAFgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAE/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCP9BK,EAfM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAEnB,OAAgB,OAAZA,EACO,KAIP,qBAAKd,UAAU,QAAf,SACKc,KCkFEC,EApFH,WAAO,IAAD,EAEQC,mBAAS,IAFjB,mBAEXC,EAFW,KAEJC,EAFI,OAGYF,mBAAU,cAHtB,mBAGXG,EAHW,KAGFC,EAHE,OAIWJ,oBAAS,GAJpB,mBAIXK,EAJW,KAIFC,EAJE,OAKsBN,mBAAS,MAL/B,mBAKXO,EALW,KAKGC,EALH,KAQlBC,qBAAU,WACRC,IAEGpB,MAAK,SAAAC,GACJW,EAASX,QAEZ,IAGH,IAwCMoB,EAAcN,EAAUJ,EAAQA,EAAMW,QAAO,SAAAhC,GAAI,OAAIA,EAAKG,aAE9D,OACE,gCACE,uCACA,cAAC,EAAD,CAAce,QAASS,IACvB,8BACE,yBAAQrB,QAAS,kBAAMoB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGM,EAAYE,KAAI,SAACjC,EAAMkC,GAAP,OACf,cAAC,EAAD,CAEElC,KAAMA,EACNC,iBAAoB,kBAxDL,SAACc,GAE1B,IAAMf,EAAOqB,EAAMc,MAAK,SAAAC,GAAC,OAAIA,EAAErB,KAAOA,KAChCsB,EAAW,2BAAOrC,GAAP,IAAaG,WAAYH,EAAKG,YAE/C2B,EACUf,EAAIsB,GACX3B,MAAK,SAAA4B,GACJhB,EAASD,EAAMY,KAAI,SAAAjC,GAAI,OAAIA,EAAKe,KAAOA,EAAKf,EAAMsC,SAEnDC,OAAM,SAAAC,GACLZ,EAAgB,SAAD,OAAU5B,EAAKK,QAAf,sCACfoC,YAAW,WAAOb,EAAgB,QAAO,KACzCN,EAASD,EAAMW,QAAO,SAAAI,GAAC,OAAGA,EAAErB,IAAIA,SA2CA2B,CAAmB1C,EAAKe,MAF7CmB,QAIX,uBAAMS,SAxCI,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBzC,QAASkB,EACTwB,MAAM,IAAIC,MAAOC,cACjB9C,UAAW+C,KAAKC,SAAW,IAG7BrB,EACUgB,GACPpC,MAAK,SAAA4B,GACJhB,EAASD,EAAM+B,OAAOd,IACtBd,EAAW,QA4BX,UACE,uBAAO6B,MAAO9B,EAAS+B,SAxBN,SAACV,GACxBW,QAAQC,IAAIZ,EAAMa,OAAOJ,OACzB7B,EAAWoB,EAAMa,OAAOJ,UAuBlB,wBAAQK,KAAK,SAAb,qBAEF,cAAC,EAAD,Q,MC9EJC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4034fb67.chunk.js","sourcesContent":["const Footer = () => {\r\n\r\n    const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'talic',\r\n        fontSize: 16\r\n    }\r\n\r\n    return (\r\n        <div style = {footerStyle}>\r\n            <br />\r\n            <em>Note app, Department of Computer Science, University of Helsinki</em>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nconst Note = ({note, toggleImportance}) => {\r\n  const label = note.important ? 'make not important' : 'make important'\r\n  return (\r\n    <li className='note'>\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n\r\n}\r\n  \r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n\r\n}\r\n\r\nconst create = newObject => {\r\n\r\n    const request = axios.post(baseUrl, newObject)\r\n    \r\n    return request.then(response => response.data)\r\n\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n\r\n    return request.then(response => response.data)\r\n\r\n}\r\n\r\n/*export default {\r\n\r\n    getAll: getAll,\r\n    create: create,\r\n    update: update\r\n\r\n}*/\r\n\r\nexport default {getAll, create, update}","const Notification = ({message}) => {\r\n\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Notification","import React, {useState, useEffect} from 'react'\r\nimport Footer from './components/Footer'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n\r\nconst [notes, setNotes] = useState([])\r\nconst [newNote, setNewNote] = useState ('A new note')\r\nconst [showAll, setShowAll] =useState(true)\r\nconst [errorMessage, setErrorMessage] = useState(null)\r\n\r\n\r\nuseEffect(() => {\r\n  noteService\r\n    .getAll()\r\n    .then(response => {\r\n      setNotes(response)\r\n    })\r\n}, [])\r\n\r\n\r\nconst toggleImportanceOf = (id) => {\r\n\r\n  const note = notes.find(n => n.id === id)\r\n  const changedNote = {...note, important: !note.important }\r\n\r\n  noteService\r\n    .update(id, changedNote)\r\n    .then(returnedNote => {\r\n      setNotes(notes.map(note => note.id !== id ? note: returnedNote))\r\n    })\r\n    .catch(error => {\r\n      setErrorMessage(`Note '${note.content}' was already deleted from server`)\r\n      setTimeout(() => {setErrorMessage(null)},5000)\r\n      setNotes(notes.filter(n=> n.id!=id))\r\n    })\r\n\r\n}\r\n\r\nconst addNote = (event) => {\r\n  event.preventDefault()\r\n  const noteObject = {\r\n    content: newNote,\r\n    date: new Date().toISOString(),\r\n    important: Math.random() < 0.5,\r\n  }\r\n\r\n  noteService\r\n    .create(noteObject)\r\n    .then(returnedNote => {\r\n      setNotes(notes.concat(returnedNote))\r\n      setNewNote('')\r\n    })\r\n}\r\n\r\n\r\nconst handleNoteChange = (event) => {\r\n  console.log(event.target.value)\r\n  setNewNote(event.target.value)\r\n}\r\n\r\nconst notesToShow = showAll ? notes : notes.filter(note => note.important)\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)} >\r\n          show {showAll ? 'important' : 'all'}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map((note, i) => \r\n          <Note \r\n            key={i} \r\n            note={note}\r\n            toggleImportance = {() => toggleImportanceOf(note.id)} />)}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input value={newNote} onChange = {handleNoteChange} />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\n  \n  ReactDOM.render(\n    <App />,\n    document.getElementById('root')\n  )\n\n\n\n\n\n"],"sourceRoot":""}